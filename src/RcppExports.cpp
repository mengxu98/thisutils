// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// asMatrix
NumericMatrix asMatrix(NumericVector rp, NumericVector cp, NumericVector z, int nrows, int ncols);
RcppExport SEXP _thisutils_asMatrix(SEXP rpSEXP, SEXP cpSEXP, SEXP zSEXP, SEXP nrowsSEXP, SEXP ncolsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cp(cpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    Rcpp::traits::input_parameter< int >::type ncols(ncolsSEXP);
    rcpp_result_gen = Rcpp::wrap(asMatrix(rp, cp, z, nrows, ncols));
    return rcpp_result_gen;
END_RCPP
}
// asMatrixParallel
NumericMatrix asMatrixParallel(NumericVector rp, NumericVector cp, NumericVector z, int nrows, int ncols);
RcppExport SEXP _thisutils_asMatrixParallel(SEXP rpSEXP, SEXP cpSEXP, SEXP zSEXP, SEXP nrowsSEXP, SEXP ncolsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cp(cpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    Rcpp::traits::input_parameter< int >::type ncols(ncolsSEXP);
    rcpp_result_gen = Rcpp::wrap(asMatrixParallel(rp, cp, z, nrows, ncols));
    return rcpp_result_gen;
END_RCPP
}
// split_indices
std::vector<std::vector<int>> split_indices(IntegerVector group, int n);
RcppExport SEXP _thisutils_split_indices(SEXP groupSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(split_indices(group, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_thisutils_asMatrix", (DL_FUNC) &_thisutils_asMatrix, 5},
    {"_thisutils_asMatrixParallel", (DL_FUNC) &_thisutils_asMatrixParallel, 5},
    {"_thisutils_split_indices", (DL_FUNC) &_thisutils_split_indices, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_thisutils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
