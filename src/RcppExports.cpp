// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// matrix_to_table
DataFrame matrix_to_table(SEXP matrix, Nullable<CharacterVector> row_names, Nullable<CharacterVector> col_names, double threshold, bool keep_zero);
RcppExport SEXP _thisutils_matrix_to_table(SEXP matrixSEXP, SEXP row_namesSEXP, SEXP col_namesSEXP, SEXP thresholdSEXP, SEXP keep_zeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type row_names(row_namesSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type col_names(col_namesSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_zero(keep_zeroSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_to_table(matrix, row_names, col_names, threshold, keep_zero));
    return rcpp_result_gen;
END_RCPP
}
// split_indices
std::vector<std::vector<int>> split_indices(IntegerVector group, int n);
RcppExport SEXP _thisutils_split_indices(SEXP groupSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(split_indices(group, n));
    return rcpp_result_gen;
END_RCPP
}
// table_to_matrix
SEXP table_to_matrix(DataFrame table, Nullable<CharacterVector> row_names, Nullable<CharacterVector> col_names, double threshold, bool return_sparse);
RcppExport SEXP _thisutils_table_to_matrix(SEXP tableSEXP, SEXP row_namesSEXP, SEXP col_namesSEXP, SEXP thresholdSEXP, SEXP return_sparseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type table(tableSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type row_names(row_namesSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector> >::type col_names(col_namesSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< bool >::type return_sparse(return_sparseSEXP);
    rcpp_result_gen = Rcpp::wrap(table_to_matrix(table, row_names, col_names, threshold, return_sparse));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_thisutils_matrix_to_table", (DL_FUNC) &_thisutils_matrix_to_table, 5},
    {"_thisutils_split_indices", (DL_FUNC) &_thisutils_split_indices, 2},
    {"_thisutils_table_to_matrix", (DL_FUNC) &_thisutils_table_to_matrix, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_thisutils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
